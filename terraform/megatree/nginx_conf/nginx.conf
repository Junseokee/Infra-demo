user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    server_tokens off;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    server_names_hash_bucket_size 128;

    upstream ci {
        server internal-project-ci-alb.ap-northeast-2.elb.amazonaws.com:80; # CI 어플리케이션의 Internal ALB
    }

    upstream cd {
        server internal-project-cd-alb.ap-northeast-2.elb.amazonaws.com:80; # CD 어플리케이션의 Internal ALB
    }

    upstream app {
        server internal-project-app-alb.ap-northeast-2.elb.amazonaws.com:80; # 일반 어플리케이션의 Internal ALB
    }

    # CI 서브도메인 설정
    server {
        listen 80;
        server_name gitlab-project.project.co.kr; # CI에 대한 서브도메인

        location / {
            proxy_pass http://ci;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    server {
        listen 80;
        server_name argo-project.co.kr; # CD에 대한 서브도메인
        location / {
            proxy_pass http://cd;
            proxy_set_header Host argo-internal.co.kr;
        }
    }
    # CD 서브도메인 설정
    server {
        listen 80;
        server_name grafana-project.co.kr; # CD에 대한 서브도메인
        location / {
            proxy_pass http://cd;
            proxy_set_header Host grafana-internal.co.kr;
        }
    }

    # 일반 어플리케이션 서브도메인 설정
    server {
        listen 80;
        server_name app-project.co.kr; # 일반 어플리케이션에 대한 서브도메인

        location / {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
    server {
        listen 80 default_server; # HTTP 80 포트에서 리스닝, 기본 서버로 설정
        listen [::]:80 default_server ipv6only=on;

        # 서버 도메인 또는 IP
        server_name _;

        # 루트 디렉토리 및 인덱스 파일
        root /var/www/html;
        index index.html index.html index.nginx-debian.html;

        # 위치 블록 예시
        location / {
            try_files $uri $uri/ =404; # 요청된 URI에 해당하는 파일이나 디렉토리가 없는 경우 404 반환
        }
    }
}
